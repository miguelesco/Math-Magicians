{"version":3,"sources":["styles/GlobalStyles.js","components/navbar/styles.js","components/navbar/Navbar.jsx","components/numbers_keyboard/styles.js","components/numbers_keyboard/numbers.jsx","components/simbols_keyboard/styles.js","components/simbols_keyboard/simbols.jsx","components/keyboard/styles.js","components/keyboard/keyboard.jsx","components/calculator/styles.js","logic/operate.js","components/calculator/calculator.jsx","logic/calculate.js","components/home/styles.js","components/home/Home.jsx","components/quote/styles.js","components/quote/Quote.jsx","App.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","flex","direction","align","justify","NavbarContainer","styled","nav","Navbar","id","path","text","map","link","to","className","activeClassName","exact","Container","div","NumberBtn","button","props","number","numberArray","Numbers","updateKeyboardValue","type","onClick","SimbolsBtn","symbolsArray","Simbols","updateKeyboardSymbol","error","symbol","clickSymbol","defaultProps","KeyboardContainer","Keyboard","updateKeyboard","bind","value","updateValue","this","PureComponent","Title","h1","ValueDisplay","Error","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","mod","Calculator","useState","total","next","calculationObj","setCalculationObj","obj","buttonName","newvalue","undefined","match","includes","parseFloat","state","HomeContainer","Description","p","Home","QuoteContainer","QuoteMessage","Author","Quote","App","GlobalStyles","react","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0969a10a.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html, body {  \r\n    height: 100%; \r\n    width: 100%;  \r\n    margin: 0;  \r\n    padding: 0; \r\n  }     \r\n  body {\r\n    background-color: #f6f6f6;\r\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #333;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst flex = (direction, align, justify) => `\r\n    display: flex;\r\n    flex-direction: ${direction};\r\n    align-items: ${align};\r\n    justify-content: ${justify};\r\n  `;\r\n\r\nconst NavbarContainer = styled.nav`\r\n  box-sizing: border-box;\r\n  padding: 0.5rem 2rem;\r\n  ${flex('row', 'center', 'space-between')};\r\n  gap: 1rem;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n\r\n  h1 {\r\n    font-size: calc(1.5rem + 2vw);\r\n    font-weight: bold;\r\n    ${flex('row', 'center', 'center')};\r\n    gap: 1rem;\r\n    color: #000;\r\n    width: 100%;\r\n    @media (min-width: 634px) {\r\n      width: auto;\r\n    }\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    width: 100%;\r\n    ${flex('row', 'center', 'center')};\r\n    gap: 1rem;\r\n    @media (min-width: 634px) {\r\n      width: auto;\r\n    }\r\n\r\n    li {\r\n      font-size: calc(1rem + 0.5vw);\r\n      font-weight: bold;\r\n      @media (min-width: 634px) {\r\n        margin-top: 0;\r\n      }\r\n\r\n      @media (min-width: 978px) {\r\n        margin-right: 0.8rem;\r\n      }\r\n      \r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport default NavbarContainer;\r\n","/* eslint-disable linebreak-style */\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FaCalculator, FaRegHandPointRight } from 'react-icons/fa';\r\nimport NavbarContainer from './styles';\r\n\r\nconst Navbar = () => {\r\n  const links = [\r\n    {\r\n      id: 1,\r\n      path: '/',\r\n      text: 'Home',\r\n    },\r\n    {\r\n      id: 2,\r\n      path: '/calculator',\r\n      text: 'Calculator',\r\n    },\r\n    {\r\n      id: 3,\r\n      path: '/quote',\r\n      text: 'Quote',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <NavbarContainer>\r\n      <h1>\r\n        <FaCalculator />\r\n        Math Magicians\r\n      </h1>\r\n      <ul>\r\n        {links.map((link) => (\r\n          <li key={link.id}>\r\n            <NavLink\r\n              to={link.path}\r\n              className=\"link\"\r\n              activeClassName=\"active-link\"\r\n              exact\r\n            >\r\n              <FaRegHandPointRight className=\"hand\" />\r\n              {link.text}\r\n            </NavLink>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 70%;\r\n  height: 100%;\r\n  background-color: #f0f0f0;\r\n  display: grid;\r\n  place-items: center;\r\n  grid-template-columns: auto auto auto;\r\n`;\r\n\r\nexport const NumberBtn = styled.button`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #e3e3e3;\r\n  border: solid 1px #bfbfbf;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  padding: 2rem 0.75rem;\r\n  grid-column-start: ${(props) => (props.number === '0' ? '1' : '0')};\r\n  grid-column-end: ${(props) => (props.number === '0' ? '3' : '0')};\r\n`;\r\n\r\nexport default Container;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container, { NumberBtn } from './styles';\r\n\r\nconst numberArray = ['AC', '+/-', '%', '7', '8', '9', '4', '5', '6', '1', '2', '3', '0', '.'];\r\n\r\nfunction Numbers({ updateKeyboardValue }) {\r\n  return (\r\n    <Container>\r\n      {numberArray.map((number) => (\r\n        <NumberBtn key={number} number={number} type=\"button\" onClick={() => updateKeyboardValue(number)}>\r\n          {number}\r\n        </NumberBtn>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nNumbers.propTypes = {\r\n  updateKeyboardValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Numbers;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-color: lightgray;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SimbolsBtn = styled.button`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: orange;\r\n  border: solid 1px #bfbfbf;\r\n  cursor: pointer;\r\n  font-size: 1.2rem;\r\n  padding: 2rem 0.75rem;\r\n`;\r\n\r\nexport default Container;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Container, { SimbolsBtn } from './styles';\r\n\r\nconst symbolsArray = ['÷', 'x', '-', '+', '='];\r\n\r\nfunction Simbols({ updateKeyboardSymbol, error }) {\r\n  const clickSymbol = (symbol) => {\r\n    if (error === null) {\r\n      updateKeyboardSymbol(symbol);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {symbolsArray.map((symbol) => (\r\n        <SimbolsBtn key={symbol} onClick={() => clickSymbol(symbol)}>\r\n          {' '}\r\n          {symbol}\r\n          {' '}\r\n        </SimbolsBtn>\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nSimbols.propTypes = {\r\n  updateKeyboardSymbol: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nSimbols.defaultProps = {\r\n  error: null,\r\n};\r\n\r\nexport default Simbols;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst KeyboardContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport default KeyboardContainer;\r\n","/* eslint-disable linebreak-style */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Numbers from '../numbers_keyboard/numbers';\r\nimport Simbols from '../simbols_keyboard/simbols';\r\nimport KeyboardContainer from './styles';\r\n\r\nclass Keyboard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateKeyboard = this.updateKeyboard.bind(this);\r\n  }\r\n\r\n  updateKeyboard(value) {\r\n    const { updateValue } = this.props;\r\n\r\n    updateValue(value);\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.props;\r\n    return (\r\n      <KeyboardContainer>\r\n        <Numbers updateKeyboardValue={this.updateKeyboard} />\r\n        <Simbols updateKeyboardSymbol={this.updateKeyboard} error={error} />\r\n      </KeyboardContainer>\r\n    );\r\n  }\r\n}\r\n\r\nKeyboard.propTypes = {\r\n  updateValue: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nKeyboard.defaultProps = {\r\n  error: null,\r\n};\r\n\r\nexport default Keyboard;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div` \r\n  width: 600px;\r\n  max-width: calc(100% - 20px);\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f5f5f5;\r\n  margin: 0 auto;\r\n  padding-bottom: 150px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3em;\r\n  text-align: center;\r\n`;\r\n\r\nexport const ValueDisplay = styled.div`\r\n  width: 100%;\r\n  height: 20%;\r\n  background-color: gray;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  box-sizing: border-box;\r\n  padding: 1rem;\r\n  font-size: 1.8em;\r\n  color: #fff;\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.div`\r\n  box-sizing: border-box;\r\n  background: #222831;\r\n  height: calc(5px + 1.5vw);\r\n  padding: 0.5rem;\r\n  text-align: left;\r\n  font-size: calc(#{12px} + #{0.3}vw);\r\n  font-weight: 700;\r\n  line-height: 32px;\r\n  color: #fff;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items:center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n`;\r\n\r\nexport default Container;\r\n","/* eslint-disable linebreak-style */\r\nimport Big from 'big.js';\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n  const one = Big(numberOne);\r\n  const two = Big(numberTwo);\r\n  if (operation === '+') {\r\n    return one.plus(two).toString();\r\n  }\r\n  if (operation === '-') {\r\n    return one.minus(two).toString();\r\n  }\r\n  if (operation === 'x') {\r\n    return one.times(two).toString();\r\n  }\r\n  if (operation === '÷') {\r\n    return one.div(two).toString();\r\n  }\r\n  if (operation === '%') {\r\n    return one.mod(two).toString();\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","/* eslint-disable linebreak-style */\r\nimport React, { useState } from 'react';\r\nimport Keyboard from '../keyboard';\r\nimport Container, { ValueDisplay, Error, Title } from './styles';\r\nimport calculate from '../../logic/calculate';\r\n\r\nconst Calculator = () => {\r\n  const [calculationObj, setCalculationObj] = useState({\r\n    total: null || 0,\r\n    next: null,\r\n    operation: null,\r\n  });\r\n\r\n  const updateValue = (value) => {\r\n    const newvalue = calculate(calculationObj, value);\r\n    setCalculationObj((state) => ({ ...state, ...newvalue }));\r\n  };\r\n\r\n  const { total, next, operation } = calculationObj;\r\n\r\n  let error = null;\r\n  if (next === '0' && operation === '÷') {\r\n    error = 'Division by zero is undefined';\r\n  } else {\r\n    error = null;\r\n  }\r\n  return (\r\n    <>\r\n      <Title>Lets do some Math</Title>\r\n      <Container>\r\n        <ValueDisplay>\r\n          <p>{total}</p>\r\n          {' '}\r\n          <p>{operation}</p>\r\n          {' '}\r\n          <p>{next}</p>\r\n        </ValueDisplay>\r\n        <Error>{error}</Error>\r\n        <Keyboard updateValue={updateValue} error={error} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","/* eslint-disable linebreak-style */\r\nimport operate from './operate';\r\n\r\nfunction isNumber(item) {\r\n  return !!item.match(/[0-9]+/);\r\n}\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:s      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === undefined) {\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === 'AC') {\r\n    return {\r\n      total: 0,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === '0' && obj.next === '0') {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next === '0') {\r\n        return { next: buttonName };\r\n      }\r\n      if (obj.next) {\r\n        return { next: obj.next + buttonName };\r\n      }\r\n      return { next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      return {\r\n        next: obj.next + buttonName,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === '.') {\r\n    if (obj.next) {\r\n      if (obj.next.includes('.')) {\r\n        return {};\r\n      }\r\n      return { next: `${obj.next}.` };\r\n    }\r\n    if (obj.operation) {\r\n      return { next: '0.' };\r\n    }\r\n    if (obj.total) {\r\n      if (obj.total.includes('.')) {\r\n        return {};\r\n      }\r\n      return { total: `${obj.total}.` };\r\n    }\r\n    return { total: '0.' };\r\n  }\r\n\r\n  if (buttonName === '=') {\r\n    if (obj.operation === '÷' && obj.next === '0') {\r\n      return {\r\n        total: obj.total,\r\n        next: obj.next,\r\n        operation: '÷',\r\n      };\r\n    }\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    // '=' with no operation, nothing to do\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === '+/-') {\r\n    if (obj.next) {\r\n      return { next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  if (!obj.next && !obj.total) {\r\n    return {};\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n  if (buttonName === '+' || buttonName === '-' || buttonName === 'x' || buttonName === '÷' || buttonName === '%') {\r\n    if (obj.operation === '÷' && obj.next === '0') {\r\n      return {\r\n        total: obj.total,\r\n        next: obj.next,\r\n        operation: '÷',\r\n      };\r\n    }\r\n  }\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst HomeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #f5f5f5;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 3em;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  line-height: 1.5;\r\n`;\r\n\r\nexport default HomeContainer;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport HomeContainer, { Title, Description } from './styles';\r\n\r\nconst Home = () => (\r\n  <HomeContainer>\r\n    <Title>Welcome to our Page!</Title>\r\n    <Description>\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n      <br />\r\n      <br />\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n      Lorem, ipsum dolor sit amet consectetur adipisicing elit.\r\n      Accusamus quibusdam eos eveniet repellendus, sequi reprehenderit\r\n      iusto officia sit veniam fugiat, fugit assumenda dolorem. Asperiores\r\n      quam odio reiciendis nobis et consectetur.\r\n    </Description>\r\n  </HomeContainer>\r\n);\r\n\r\nexport default Home;\r\n","/* eslint-disable linebreak-style */\r\nimport styled from 'styled-components';\r\n\r\nconst QuoteContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f5f5f5;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const QuoteMessage = styled.div`\r\n  display: flex;\r\n  font-size: 1.5em;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Author = styled.p`\r\n  font-size: 1em;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport default QuoteContainer;\r\n","/* eslint-disable linebreak-style */\r\nimport QuoteContainer, { Author, QuoteMessage } from './styles';\r\n\r\nconst Quote = () => (\r\n  <QuoteContainer>\r\n    <QuoteMessage>\r\n      Mathematics is not about numbers, equations, computations,\r\n      or algorithms: It is about understanding\r\n    </QuoteMessage>\r\n    <Author>William Paul Thurston</Author>\r\n  </QuoteContainer>\r\n);\r\n\r\nexport default Quote;\r\n","/* eslint-disable linebreak-style */\r\nimport react from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Calculator from './components/calculator/calculator';\r\nimport Home from './components/home/Home';\r\nimport Quote from './components/quote/Quote';\r\n\r\nclass App extends react.PureComponent {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <GlobalStyles />\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/calculator\">\r\n            <Calculator />\r\n          </Route>\r\n          <Route path=\"/quote\">\r\n            <Quote />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}